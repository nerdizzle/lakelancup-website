{"version":3,"file":"debug.mjs","sources":["../src/devtools/custom.js","../src/debug.js","../src/devtools/renderer.js","../src/devtools/index.js","../src/index.js"],"sourcesContent":["import { Fragment } from 'preact';\n\n/**\n * Get the type/category of a vnode\n * @param {import('../internal').VNode} vnode\n * @returns {import('../internal').NodeType}\n */\nexport function getNodeType(vnode) {\n\tif (vnode.type===Fragment) return 'Wrapper';\n\telse if (typeof vnode.type==='function') return 'Composite';\n\telse if (typeof vnode.type==='string') return 'Native';\n\treturn 'Text';\n}\n\n/**\n * Get human readable name of the component/dom element\n * @param {import('../internal').VNode} vnode\n * @returns {string}\n */\nexport function getDisplayName(vnode) {\n\tif (vnode.type===Fragment) return 'Fragment';\n\telse if (typeof vnode.type==='function') return vnode.type.displayName || vnode.type.name;\n\telse if (typeof vnode.type==='string') return vnode.type;\n\treturn '#text';\n}\n\n/**\n * Deeply mutate a property by walking down an array of property keys\n * @param {object} obj\n * @param {Array<string | number>} path\n * @param {any} value\n */\nexport function setIn(obj, path, value) {\n\tlet last = path.pop();\n\tlet parent = path.reduce((acc, attr) => acc ? acc[attr] : null, obj);\n\tif (parent) {\n\t\tparent[last] = value;\n\t}\n}\n\n/**\n * Get devtools compatible data from vnode\n * @param {import('../internal').VNode} vnode\n * @returns {import('../internal').DevtoolData}\n */\nexport function getData(vnode) {\n\tlet c = vnode._component;\n\n\t/** @type {import('../internal').DevtoolsUpdater | null} */\n\tlet updater = null;\n\n\tif (c!=null) {\n\t\t// These functions will be called when the user changes state, props or\n\t\t// context values via the devtools ui panel\n\t\tupdater = {\n\t\t\tsetState: c.setState.bind(c),\n\t\t\tforceUpdate: c.forceUpdate.bind(c),\n\t\t\tsetInState(path, value) {\n\t\t\t\tc.setState(prev => {\n\t\t\t\t\tsetIn(prev, path, value);\n\t\t\t\t\treturn prev;\n\t\t\t\t});\n\t\t\t},\n\t\t\tsetInProps(path, value) {\n\t\t\t\tsetIn(vnode.props, path, value);\n\t\t\t\tc.setState({});\n\t\t\t},\n\t\t\tsetInContext(path, value) {\n\t\t\t\tsetIn(c.context, path, value);\n\t\t\t\tc.setState({});\n\t\t\t}\n\t\t};\n\t}\n\n\tlet children = getChildren(vnode);\n\n\tlet duration = vnode.endTime - vnode.startTime;\n\treturn {\n\t\tnodeType: getNodeType(vnode),\n\t\ttype: vnode.type,\n\t\tname: getDisplayName(vnode),\n\t\tref: vnode.ref || null,\n\t\tkey: vnode.key || null,\n\t\tupdater,\n\t\ttext: vnode.text,\n\t\tstate: c!=null ? c.state : null,\n\t\tprops: vnode.props,\n\t\t// The devtools inline text children if they are the only child\n\t\tchildren: vnode.text==null\n\t\t\t? children!=null && children.length==1 && children[0].text!=null\n\t\t\t\t? children[0].text\n\t\t\t\t: children\n\t\t\t: null,\n\t\tpublicInstance: getInstance(vnode),\n\t\tmemoizedInteractions: [],\n\n\t\t// Profiler data\n\t\tactualDuration: duration,\n\t\tactualStartTime: vnode.startTime,\n\t\ttreeBaseDuration: duration\n\t};\n}\n\n/**\n * Get all rendered vnode children as an array. Moreover we need to filter\n * out `null` or other falsy children.\n * @param {import('../internal').VNode} vnode\n * @returns {import('../internal').VNode[]}\n */\nexport function getChildren(vnode) {\n\tlet c = vnode._component;\n\n\tif (c==null) {\n\t\treturn vnode._children!=null ? vnode._children.filter(Boolean) : [];\n\t}\n\n\treturn !Array.isArray(c._prevVNode) && c._prevVNode!=null\n\t\t? [c._prevVNode]\n\t\t: null;\n}\n\n/**\n * Check if a vnode is a root node\n * @param {import('../internal').VNode} vnode\n * @returns {boolean}\n */\nexport function isRoot(vnode) {\n\t// Timings of root vnodes will never be set\n\treturn vnode.type===Fragment && vnode.endTime==-1;\n}\n\n/**\n * Cache a vnode by its instance and retrieve previous vnodes by the next\n * instance.\n *\n * We need this to be able to identify the previous vnode of a given instance.\n * For components we want to check if we already rendered it and use the class\n * instance as key. For html elements we use the dom node as key.\n *\n * @param {import('../internal').VNode} vnode\n * @returns {import('../internal').Component | import('../internal').PreactElement | Text | null}\n */\nexport function getInstance(vnode) {\n\t// Use the parent element as instance for root nodes\n\tif (isRoot(vnode)) {\n\t\t// Edge case: When the tree only consists of components that have not rendered\n\t\t// anything into the DOM we revert to using the vnode as instance.\n\t\treturn vnode._children.length > 0 && vnode._children[0]._dom!=null\n\t\t\t? /** @type {import('../internal').PreactElement | null} */\n\t\t\t(vnode._children[0]._dom.parentNode)\n\t\t\t: vnode;\n\t}\n\tif (vnode._component!=null) return vnode._component;\n\tif (vnode.type===Fragment) return vnode.props;\n\treturn vnode._dom;\n}\n\n/**\n * Compare two objects\n * @param {object} a\n * @param {object} b\n * @param {boolean} [isProps]\n * @returns {boolean}\n */\nexport function shallowEqual(a, b, isProps) {\n\tif (a==null || b==null) return false;\n\n\tfor (let key in a) {\n\t\tif (isProps && key=='children' && b[key]!=null) continue;\n\t\tif (a[key]!==b[key]) return false;\n\t}\n\n\tif (Object.keys(a).length!==Object.keys(b).length) return false;\n\treturn true;\n}\n\n/**\n * Check if a vnode was actually updated\n * @param {import('../internal').VNode} next\n * @param {import('../internal').VNode} prev\n * @returns {boolean}\n */\nexport function hasDataChanged(prev, next) {\n\treturn (prev.props !== next.props && !shallowEqual(prev.props, next.props, true))\n\t\t|| (prev._component!=null &&\n\t\t\t!shallowEqual(next._component._prevState, next._component.state))\n\t\t|| prev._dom !== next._dom\n\t\t|| prev.ref !== next.ref;\n}\n\n/**\n * Check if a the profiling data ahs changed between vnodes\n * @param {import('../internal').VNode} next\n * @param {import('../internal').VNode} prev\n * @returns {boolean}\n */\nexport function hasProfileDataChanged(prev, next) {\n\treturn prev.startTime!==next.startTime || prev.endTime!==next.endTime;\n}\n","import { checkPropTypes } from 'prop-types';\nimport { getDisplayName } from './devtools/custom';\nimport { options, toChildArray } from 'preact';\n\nexport function initDebug() {\n\t/* eslint-disable no-console */\n\tlet oldBeforeDiff = options.diff;\n\n\toptions.diff = vnode => {\n\t\tlet { type, props } = vnode;\n\t\tlet children = props && props.children;\n\n\t\tif (type===undefined) {\n\t\t\tthrow new Error('Undefined component passed to createElement()\\n'+serializeVNode(vnode));\n\t\t}\n\n\t\tif (\n\t\t\tvnode.ref!==undefined &&\n\t\t\ttypeof vnode.ref!=='function' &&\n\t\t\ttypeof vnode.ref!=='object' &&\n\t\t\t!('$$typeof' in vnode)  // allow string refs when preact-compat is installed\n\t\t) {\n\t\t\tthrow new Error(\n\t\t\t\t`Component's \"ref\" property should be a function, or an object created ` +\n\t\t\t\t`by createRef(), but got [${typeof vnode.ref}] instead\\n` +\n\t\t\t\tserializeVNode(vnode)\n\t\t\t);\n\t\t}\n\n\t\t// Check prop-types if available\n\t\tif (typeof vnode.type==='function' && vnode.type.propTypes) {\n\t\t\tcheckPropTypes(vnode.type.propTypes, vnode.props, getDisplayName(vnode), serializeVNode(vnode));\n\t\t}\n\n\t\tlet keys = [];\n\t\tfor (let deepChild of toChildArray(children)) {\n\t\t\tif (!deepChild || deepChild.key==null) continue;\n\n\t\t\tlet key = deepChild.key;\n\n\t\t\tif (keys.indexOf(key) !== -1) {\n\t\t\t\tconsole.error(\n\t\t\t\t\t'Following component has two or more children with the ' +\n\t\t\t\t\t`same key attribute: \"${key}\". This may cause glitches and misbehavior ` +\n\t\t\t\t\t'in rendering process. Component: \\n\\n' +\n\t\t\t\t\tserializeVNode(vnode)\n\t\t\t\t);\n\n\t\t\t\t// Break early to not spam the console\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tkeys.push(key);\n\t\t}\n\n\t\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n\t};\n}\n\n/**\n * Serialize a vnode tree to a string\n * @param {import('./internal').VNode} vnode\n * @returns {string}\n */\nexport function serializeVNode(vnode) {\n\tlet { props } = vnode;\n\tlet name = getDisplayName(vnode);\n\n\tlet attrs = '';\n\tif (props) {\n\t\tfor (let prop in props) {\n\t\t\tif (props.hasOwnProperty(prop) && prop!=='children') {\n\t\t\t\tlet value = props[prop];\n\n\t\t\t\t// If it is an object but doesn't have toString(), use Object.toString\n\t\t\t\tif (typeof value==='function') {\n\t\t\t\t\tvalue = `function ${value.displayName || value.name}() {}`;\n\t\t\t\t}\n\n\t\t\t\tvalue = Object(value) === value && !value.toString\n\t\t\t\t\t? Object.prototype.toString.call(value)\n\t\t\t\t\t: value + '';\n\n\t\t\t\tattrs += ` ${prop}=${JSON.stringify(value)}`;\n\t\t\t}\n\t\t}\n\t}\n\n\tlet children = props.children;\n\treturn `<${name}${attrs}${children && children.length\n\t\t? '>..</'+name+'>'\n\t\t: ' />'}`;\n}\n","import { getData, getChildren, getInstance, hasProfileDataChanged, hasDataChanged, isRoot } from './custom';\n\n/**\n * Custom renderer tailored for Preact. It converts updated vnode trees\n * to events the devtools can understand.\n * @class Renderer\n */\nexport class Renderer {\n\tconstructor(hook, rid) {\n\n\t\t/** @type {string} */\n\t\tthis.rid = rid;\n\t\tthis.hook = hook;\n\n\t\t/** @type {Array<import('../internal').DevtoolsEvent>} */\n\t\tthis.pending = [];\n\n\t\t/**\n\t\t * Store the instance of a vnode. This will be later used to decide if a\n\t\t * vnode needs to be mounted or updated. For components the instance refers\n\t\t * to the actuall class instance whereas for dom nodes it refers to the\n\t\t * underlying dom element.\n\t\t * @type {WeakMap<import('../internal').Component | import('../internal').PreactElement | HTMLElement | Text, import('../internal').VNode>}\n\t\t */\n\t\tthis.inst2vnode = new WeakMap();\n\t\tthis.connected = false;\n\t}\n\n\t/**\n\t * Mark the connection status as ready so that we can proceed\n\t * to actually flush events.\n\t */\n\tmarkConnected() {\n\t\tthis.connected = true;\n\t\tthis.flushPendingEvents();\n\t}\n\n\t/**\n\t * Flush all queued events\n\t */\n\tflushPendingEvents() {\n\t\tif (!this.connected) return;\n\n\t\tlet events = this.pending;\n\t\tthis.pending = [];\n\t\tfor (let i = 0; i < events.length; i++) {\n\t\t\tlet event = events[i];\n\t\t\tthis.hook.emit(event.type, event);\n\t\t}\n\t}\n\n\t/**\n\t * Recursively mount a vnode tree. Note that the devtools expectes the tree to\n\t * be mounted from the bottom up, otherwise the order will be messed up.\n\t * Therefore we mount children prior to mounting the vnode itself.\n\t * @param {import('../internal').VNode} vnode\n\t */\n\tmount(vnode) {\n\t\tthis.inst2vnode.set(getInstance(vnode), vnode);\n\t\tlet data = getData(vnode);\n\n\t\t/** @type {Array<import('../internal').DevtoolsEvent>} */\n\t\tlet work = [{\n\t\t\tinternalInstance: vnode,\n\t\t\tdata,\n\t\t\trenderer: this.rid,\n\t\t\ttype: 'mount'\n\t\t}];\n\n\t\t// Children must be mounted first\n\t\tif (Array.isArray(data.children)) {\n\t\t\tlet stack = data.children.slice();\n\t\t\tlet item;\n\t\t\twhile ((item = stack.pop())!=null) {\n\t\t\t\tlet children = getChildren(item);\n\t\t\t\tstack.push(...children);\n\n\t\t\t\tthis.inst2vnode.set(getInstance(item), item);\n\n\t\t\t\tlet data = getData(item);\n\n\t\t\t\twork.push({\n\t\t\t\t\tinternalInstance: item,\n\t\t\t\t\tdata,\n\t\t\t\t\trenderer: this.rid,\n\t\t\t\t\ttype: 'mount'\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = work.length; --i>=0;) {\n\t\t\tthis.pending.push(work[i]);\n\t\t}\n\n\t\t// Special event if we have a root\n\t\tif (isRoot(vnode)) {\n\t\t\tthis.pending.push({\n\t\t\t\tinternalInstance: vnode,\n\t\t\t\tdata,\n\t\t\t\trenderer: this.rid,\n\t\t\t\ttype: 'root'\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Update a vnode tree\n\t * @param {import('../internal').VNode} vnode\n\t */\n\tupdate(vnode) {\n\t\tlet data = getData(vnode);\n\n\t\t// Children must be updated first\n\t\tif (Array.isArray(data.children)) {\n\t\t\tfor (let i = 0; i < data.children.length; i++) {\n\t\t\t\tlet child = data.children[i];\n\t\t\t\tlet inst = getInstance(child);\n\n\t\t\t\tlet prevChild = this.inst2vnode.get(inst);\n\t\t\t\tif (prevChild==null) this.mount(child);\n\t\t\t\telse this.update(child);\n\n\t\t\t\t// Mutate child to keep referential equality intact\n\t\t\t\tdata.children[i] = this.inst2vnode.get(inst);\n\t\t\t}\n\t\t}\n\n\t\tlet prev = this.inst2vnode.get(data.publicInstance);\n\n\t\t// The `updateProfileTimes` event is a faster version of `updated` and\n\t\t// is processed much quicker inside the devtools extension.\n\t\tif (!hasDataChanged(prev, vnode) && hasProfileDataChanged(prev, vnode)) {\n\t\t\tthis.pending.push({\n\t\t\t\t// This property is only used as an id inside the devtools. The\n\t\t\t\t// relevant data will be read from `.data` instead which is a\n\t\t\t\t// normalized structure that every react release adheres to. This\n\t\t\t\t// makes backwards-compatibility easier instead of relying on internal\n\t\t\t\t// vnode/fiber shape.\n\t\t\t\tinternalInstance: prev,\n\t\t\t\tdata,\n\t\t\t\trenderer: this.rid,\n\t\t\t\ttype: 'updateProfileTimes'\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pending.push({\n\t\t\t// This property is only used as an id inside the devtools. The\n\t\t\t// relevant data will be read from `.data` instead which is a\n\t\t\t// normalized structure that every react release adheres to. This\n\t\t\t// makes backwards-compatibility easier instead of relying on internal\n\t\t\t// vnode/fiber shape.\n\t\t\tinternalInstance: prev,\n\t\t\tdata,\n\t\t\trenderer: this.rid,\n\t\t\ttype: 'update'\n\t\t});\n\t}\n\n\t/**\n\t * Pass a rendered tree to the devtools. At this point elements have already\n\t * unmounted, so we don't need to check for removals and only update vs mount\n\t * instead.\n\t * @param {import('../internal').VNode} vnode\n\t */\n\thandleCommitFiberRoot(vnode) {\n\t\tlet inst = getInstance(vnode);\n\n\t\tif (this.inst2vnode.has(inst)) this.update(vnode);\n\t\telse this.mount(vnode);\n\n\t\t// The devtools checks via the existance of this property if the devtools\n\t\t// profiler should be enabled or not. If it is missing from the first root\n\t\t// node the \"Profiler\" tab won't show up.\n\t\t/** @type {import('../internal').VNode} */\n\t\tlet root = null;\n\t\tif (isRoot(vnode)) {\n\n\t\t\t/** @type {*} */\n\t\t\t(vnode).treeBaseDuration = 0;\n\t\t\troot = vnode;\n\t\t}\n\t\telse {\n\t\t\t// \"rootCommitted\" always needs the actual root node for the profiler\n\t\t\t// to be able to collect timings. The `_ancestorComponent` property will\n\t\t\t// point to a vnode for a root node.\n\t\t\troot = vnode._component;\n\t\t\twhile (root._ancestorComponent!=null) {\n\t\t\t\troot = root._ancestorComponent;\n\t\t\t}\n\t\t}\n\n\t\tthis.pending.push({\n\t\t\tinternalInstance: root,\n\t\t\trenderer: this.rid,\n\t\t\tdata: getData(root),\n\t\t\ttype: 'rootCommitted'\n\t\t});\n\n\t\tthis.flushPendingEvents();\n\t\treturn vnode;\n\t}\n\n\t/**\n\t * Unmount a vnode recursively. Contrary to mounting or updating unmounting needs\n\t * to push the events in parent-first order. Because `options.unmount` is\n\t * already fired in parent-first order we don't need to traverse anything here.\n\t * @param {import('../internal').VNode} vnode\n\t */\n\thandleCommitFiberUnmount(vnode) {\n\t\tlet inst = getInstance(vnode);\n\t\tthis.inst2vnode.delete(inst);\n\n\t\t// Special case when unmounting a root (most prominently caused by webpack's\n\t\t// `hot-module-reloading`). If this happens we need to unmount the virtual\n\t\t// `Fragment` we're wrapping around each root just for the devtools.\n\n\t\tthis.pending.push({\n\t\t\tinternalInstance: vnode,\n\t\t\trenderer: this.rid,\n\t\t\ttype: 'unmount'\n\t\t});\n\t}\n\n\t/**\n\t * Get the dom element by a vnode\n\t * @param {import('../internal').VNode} vnode\n\t * @returns {import('../internal').PreactElement | Text}\n\t */\n\tgetNativeFromReactElement(vnode) {\n\t\treturn vnode._dom;\n\t}\n\n\t/**\n\t * Get a vnode by a dom element\n\t * @param {import('../internal').PreactElement | Text} dom\n\t * @returns {import('../internal').VNode | null}\n\t */\n\tgetReactElementFromNative(dom) {\n\t\treturn this.inst2vnode.get(dom) || null;\n\t}\n\n\t// Unused, but devtools expects it to be there\n\t/* istanbul ignore next */\n\twalkTree() {}\n\n\t// Unused, but devtools expects it to be there\n\t/* istanbul ignore next */\n\tcleanup() {}\n}\n","import { options, Fragment } from 'preact';\nimport { Renderer } from './renderer';\n\n/**\n * Wrap function with generic error logging\n *\n * @param {*} fn\n * @returns\n */\nfunction catchErrors(fn) {\n\treturn function(arg) {\n\t\ttry {\n\t\t\treturn fn(arg);\n\t\t}\n\t\tcatch (e) {\n\t\t\t/* istanbul ignore next */\n\t\t\tconsole.error('The react devtools encountered an error');\n\t\t\t/* istanbul ignore next */\n\t\t\tconsole.log(e); // eslint-disable-line no-console\n\t\t}\n\t};\n}\n\n/* istanbul ignore next */\nlet noop = () => undefined;\n\nexport function initDevTools() {\n\t// This global variable is injected by the devtools\n\t/** @type {import('../internal').DevtoolsWindow} */\n\tlet hook = (window).__REACT_DEVTOOLS_GLOBAL_HOOK__;\n\tif (hook==null) return;\n\n\t/** @type {(vnode: import('../internal').VNode) => void} */\n\tlet onCommitRoot = noop;\n\n\t/** @type {(vnode: import('../internal').VNode) => void} */\n\tlet onCommitUnmount = noop;\n\n\t// Initialize our custom renderer\n\tlet rid = Math.random().toString(16).slice(2);\n\tlet preactRenderer = new Renderer(hook, rid);\n\n\tcatchErrors(() => {\n\t\tlet isDev = false;\n\t\ttry {\n\t\t\tisDev = process.env.NODE_ENV!=='production';\n\t\t}\n\t\tcatch (e) {}\n\n\t\t// Tell devtools which bundle type we run in\n\t\twindow.parent.postMessage({\n\t\t\tsource: 'react-devtools-detector',\n\t\t\treactBuildType: /* istanbul ignore next */  isDev\n\t\t\t\t? 'development'\n\t\t\t\t: 'production'\n\t\t}, '*');\n\n\t\tlet renderer = {\n\t\t\tbundleType: /* istanbul ignore next */  isDev ? 1 : 0,\n\t\t\tversion: '16.5.2',\n\t\t\trendererPackageName: 'preact',\n\t\t\t// We don't need this, but the devtools `attachRenderer` function relys\n\t\t\t// it being there.\n\t\t\tfindHostInstanceByFiber(vnode) {\n\t\t\t\treturn vnode._dom;\n\t\t\t},\n\t\t\t// We don't need this, but the devtools `attachRenderer` function relys\n\t\t\t// it being there.\n\t\t\tfindFiberByHostInstance(instance) {\n\t\t\t\treturn preactRenderer.inst2vnode.get(instance) || null;\n\t\t\t}\n\t\t};\n\n\t\thook._renderers[rid] = renderer;\n\n\t\t// We can't bring our own `attachRenderer` function therefore we simply\n\t\t// prevent the devtools from overwriting our custom renderer by creating\n\t\t// a noop setter.\n\t\tObject.defineProperty(hook.helpers, rid, {\n\t\t\tget: () => preactRenderer,\n\t\t\tset: () => {\n\t\t\t\tif (!preactRenderer.connected) {\n\t\t\t\t\thelpers.markConnected();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tlet helpers = hook.helpers[rid];\n\n\t\t// Tell the devtools that we are ready to start\n\t\thook.emit('renderer-attached', {\n\t\t\tid: rid,\n\t\t\trenderer,\n\t\t\thelpers\n\t\t});\n\n\t\tonCommitRoot = catchErrors(root => {\n\t\t\t// Empty root\n\t\t\tif (root.type===Fragment && root._children.length==0) return;\n\n\t\t\tlet roots = hook.getFiberRoots(rid);\n\t\t\troot = helpers.handleCommitFiberRoot(root);\n\t\t\tif (!roots.has(root)) roots.add(root);\n\t\t});\n\n\t\tonCommitUnmount = catchErrors(vnode => {\n\t\t\thook.onCommitFiberUnmount(rid, vnode);\n\t\t});\n\t})();\n\n\t// Store (possible) previous hooks so that we don't overwrite them\n\tlet prevVNodeHook = options.vnode;\n\tlet prevCommitRoot = options.commit;\n\tlet prevBeforeUnmount = options.unmount;\n\tlet prevBeforeDiff = options.diff;\n\tlet prevAfterDiff = options.diffed;\n\n\toptions.vnode = (vnode) => {\n\t\t// Tiny performance improvement by initializing fields as doubles\n\t\t// from the start. `performance.now()` will always return a double.\n\t\t// See https://github.com/facebook/react/issues/14365\n\t\t// and https://slidr.io/bmeurer/javascript-engine-fundamentals-the-good-the-bad-and-the-ugly\n\t\tvnode.startTime = NaN;\n\t\tvnode.endTime = NaN;\n\n\t\tvnode.startTime = 0;\n\t\tvnode.endTime = -1;\n\t\tif (prevVNodeHook) prevVNodeHook(vnode);\n\t};\n\n\toptions.diff = (vnode) => {\n\t\tvnode.startTime = now();\n\t\tif (prevBeforeDiff!=null) prevBeforeDiff(vnode);\n\t};\n\n\toptions.diffed = (vnode) => {\n\t\tvnode.endTime = now();\n\t\tif (prevAfterDiff!=null) prevAfterDiff(vnode);\n\t};\n\n\toptions.commit = catchErrors((vnode) => {\n\t\t// Call previously defined hook\n\t\tif (prevCommitRoot!=null) prevCommitRoot(vnode);\n\n\t\t// These cases are already handled by `unmount`\n\t\tif (vnode==null) return;\n\t\tonCommitRoot(vnode);\n\t});\n\n\toptions.unmount = catchErrors((vnode) => {\n\t\t// Call previously defined hook\n\t\tif (prevBeforeUnmount!=null) prevBeforeUnmount(vnode);\n\t\tonCommitUnmount(vnode);\n\t});\n}\n\n/**\n * Get current timestamp in ms. Used for profiling.\n * @returns {number}\n */\nexport let now = Date.now;\n\ntry {\n\t/* istanbul ignore else */\n\tnow = performance.now.bind(performance);\n}\ncatch (e) {}\n","import { initDebug } from './debug';\nimport { initDevTools } from './devtools';\n\nif (process.env.NODE_ENV==='development') {\n\tinitDebug();\n\tinitDevTools();\n}\n"],"names":["getNodeType","vnode","type","Fragment","getDisplayName","displayName","name","setIn","obj","path","value","last","pop","parent","reduce","acc","attr","getData","c","_component","updater","setState","bind","forceUpdate","setInState","prev","setInProps","props","setInContext","context","children","getChildren","duration","endTime","startTime","nodeType","ref","key","text","state","length","publicInstance","getInstance","memoizedInteractions","actualDuration","actualStartTime","treeBaseDuration","_children","filter","Boolean","Array","isArray","_prevVNode","isRoot","_dom","parentNode","shallowEqual","a","b","isProps","let","Object","keys","serializeVNode","attrs","prop","hasOwnProperty","toString","prototype","call","JSON","stringify","Renderer","constructor","hook","rid","pending","inst2vnode","WeakMap","connected","catchErrors","fn","arg","e","console","error","log","markConnected","flushPendingEvents","this","events","i","event","emit","mount","set","data","work","renderer","item","stack","slice","push","update","child","inst","get","next","_prevState","hasDataChanged","hasProfileDataChanged","handleCommitFiberRoot","has","root","_ancestorComponent","handleCommitFiberUnmount","delete","getNativeFromReactElement","getReactElementFromNative","dom","walkTree","cleanup","oldBeforeDiff","noop","now","Date","performance","process","env","NODE_ENV","options","diff","undefined","Error","propTypes","checkPropTypes","toChildArray","deepChild","indexOf","window","__REACT_DEVTOOLS_GLOBAL_HOOK__","onCommitRoot","onCommitUnmount","Math","random","preactRenderer","isDev","postMessage","source","reactBuildType","bundleType","version","rendererPackageName","findHostInstanceByFiber","findFiberByHostInstance","instance","_renderers","defineProperty","helpers","id","roots","getFiberRoots","add","onCommitFiberUnmount","prevVNodeHook","prevCommitRoot","commit","prevBeforeUnmount","unmount","prevBeforeDiff","prevAfterDiff","diffed","NaN","initDevTools"],"mappings":"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"}