{"version":3,"file":"preact.module.js","sources":["../src/constants.js","../src/options.js","../src/create-element.js","../src/component.js","../src/render.js","../src/create-context.js","../src/util.js","../src/diff/children.js","../src/diff/props.js","../src/diff/index.js","../src/clone-element.js"],"sourcesContent":["export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|^--/i;\n","/** @type {import('./internal').Options}  */\nconst options = {};\n\nexport default options;\n","import options from './options';\nimport { assign } from './util';\n\n/**\n  * Create an virtual node (used for JSX)\n  * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n  * constructor for this virtual node\n  * @param {object | null | undefined} [props] The properties of the virtual node\n  * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n  * @returns {import('./internal').VNode}\n  */\nexport function createElement(type, props, children) {\n\tprops = assign({}, props);\n\n\tif (arguments.length>3) {\n\t\tchildren = [children];\n\t\t// https://github.com/preactjs/preact/issues/1916\n\t\tfor (let i=3; i<arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children!=null) {\n\t\tprops.children = children;\n\t}\n\n\t// \"type\" may be undefined during development. The check is needed so that\n\t// we can display a nice error message with our debug helpers\n\tif (type!=null && type.defaultProps!=null) {\n\t\tfor (let i in type.defaultProps) {\n\t\t\tif (props[i]===undefined) props[i] = type.defaultProps[i];\n\t\t}\n\t}\n\tlet ref = props.ref;\n\tlet key = props.key;\n\tif (ref!=null) delete props.ref;\n\tif (key!=null) delete props.key;\n\n\treturn createVNode(type, props, key, ref);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t_lastDomChild: null,\n\t\t_component: null,\n\t\tconstructor: undefined\n\t};\n\n\tif (options.vnode) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn {};\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode => vnode!=null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s = (this._nextState!==this.state && this._nextState) || (this._nextState = assign({}, this.state));\n\n\t// if update() mutates state in-place, skip the copy:\n\tif (typeof update!=='function' || (update = update(s, this.props))) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update==null) return;\n\n\tif (this._vnode) {\n\t\tthis._force = false;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type === 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tlet newDom = diff(parentDom, vnode, assign({}, vnode), component._context, parentDom.ownerSVGElement!==undefined, null, commitQueue, oldDom == null ? getDomSibling(vnode) : oldDom);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (newDom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet q = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb) => void}\n */\n/* istanbul ignore next */\nconst defer = typeof Promise=='function' ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce = options.debounceRendering;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif ((!c._dirty && (c._dirty = true) && q.push(c) === 1) ||\n\t    (prevDebounce !== options.debounceRendering)) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(options.debounceRendering || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet p;\n\tq.sort((a, b) => b._vnode._depth - a._vnode._depth);\n\twhile ((p=q.pop())) {\n\t\t// forceUpdate's callback argument is reused here to indicate a non-forced update.\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\n\nconst IS_HYDRATE = EMPTY_OBJ;\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./index').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {Element | Text} [replaceNode] Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\tlet isHydrating = replaceNode === IS_HYDRATE;\n\tlet oldVNode = isHydrating ? null : replaceNode && replaceNode._children || parentDom._children;\n\tvnode = createElement(Fragment, null, [vnode]);\n\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t(isHydrating ? parentDom : (replaceNode || parentDom))._children = vnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\treplaceNode && !isHydrating\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t\t? null\n\t\t\t\t: EMPTY_ARR.slice.call(parentDom.childNodes),\n\t\tcommitQueue,\n\t\treplaceNode || EMPTY_OBJ,\n\t\tisHydrating,\n\t);\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./index').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, IS_HYDRATE);\n}\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue) {\n\tconst ctx = {};\n\n\tconst context = {\n\t\t_id: '__cC' + i++,\n\t\t_defaultValue: defaultValue,\n\t\tConsumer(props, context) {\n\t\t\treturn props.children(context);\n\t\t},\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tconst subs = [];\n\t\t\t\tthis.getChildContext = () => {\n\t\t\t\t\tctx[context._id] = this;\n\t\t\t\t\treturn ctx;\n\t\t\t\t};\n\t\t\t\tthis.shouldComponentUpdate = _props => {\n\t\t\t\t\tif (props.value !== _props.value) {\n\t\t\t\t\t\tsubs.some(c => {\n\t\t\t\t\t\t\tc.context = _props.value;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tthis.sub = (c) => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\told && old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\tcontext.Consumer.contextType = context;\n\n\treturn context;\n}\n","/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { removeNode } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {Node | Text} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(parentDom, newParentVNode, oldParentVNode, context, isSvg, excessDomChildren, commitQueue, oldDom, isHydrating) {\n\tlet i, j, oldVNode, newDom, sibDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\t// Only in very specific places should this logic be invoked (top level `render` and `diffElementNodes`).\n\t// I'm using `EMPTY_OBJ` to signal when `diffChildren` is invoked in these situations. I can't use `null`\n\t// for this purpose, because `null` is a valid value for `oldDom` which can mean to skip to this logic\n\t// (e.g. if mounting a new tree in which the old DOM should be ignored (usually for Fragments).\n\tif (oldDom == EMPTY_OBJ) {\n\t\tif (excessDomChildren != null) {\n\t\t\toldDom = excessDomChildren[0];\n\t\t}\n\t\telse if (oldChildrenLength) {\n\t\t\toldDom = getDomSibling(oldParentVNode, 0);\n\t\t}\n\t\telse {\n\t\t\toldDom = null;\n\t\t}\n\t}\n\n\ti=0;\n\tnewParentVNode._children = toChildArray(newParentVNode._children, childVNode => {\n\n\t\tif (childVNode!=null) {\n\t\t\tchildVNode._parent = newParentVNode;\n\t\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t\t// Check if we find a corresponding element in oldChildren.\n\t\t\t// If found, delete the array item by setting to `undefined`.\n\t\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t\t// (holes).\n\t\t\toldVNode = oldChildren[i];\n\n\t\t\tif (oldVNode===null || (oldVNode && childVNode.key == oldVNode.key && childVNode.type === oldVNode.type)) {\n\t\t\t\toldChildren[i] = undefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\t\tfor (j=0; j<oldChildrenLength; j++) {\n\t\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t\t// We always match by type (in either case).\n\t\t\t\t\tif (oldVNode && childVNode.key == oldVNode.key && childVNode.type === oldVNode.type) {\n\t\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\toldVNode = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\t\tnewDom = diff(parentDom, childVNode, oldVNode, context, isSvg, excessDomChildren, commitQueue, oldDom, isHydrating);\n\n\t\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\t\t(refs || (refs=[])).push(j, childVNode._component || newDom, childVNode);\n\t\t\t}\n\n\t\t\t// Only proceed if the vnode has not been unmounted by `diff()` above.\n\t\t\tif (newDom!=null) {\n\t\t\t\tif (firstChildDom == null) {\n\t\t\t\t\tfirstChildDom = newDom;\n\t\t\t\t}\n\n\t\t\t\tif (childVNode._lastDomChild != null) {\n\t\t\t\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t\t\t\t// have a non-null _lastDomChild. Continue the diff from the end of\n\t\t\t\t\t// this Fragment's DOM tree.\n\t\t\t\t\tnewDom = childVNode._lastDomChild;\n\n\t\t\t\t\t// Eagerly cleanup _lastDomChild. We don't need to persist the value because\n\t\t\t\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t\t\t\t// diffing Components and Fragments.\n\t\t\t\t\tchildVNode._lastDomChild = null;\n\t\t\t\t}\n\t\t\t\telse if (excessDomChildren==oldVNode || newDom!=oldDom || newDom.parentNode==null) {\n\t\t\t\t\t// NOTE: excessDomChildren==oldVNode above:\n\t\t\t\t\t// This is a compression of excessDomChildren==null && oldVNode==null!\n\t\t\t\t\t// The values only have the same type when `null`.\n\n\t\t\t\t\touter: if (oldDom==null || oldDom.parentNode!==parentDom) {\n\t\t\t\t\t\tparentDom.appendChild(newDom);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\t\t\t\tfor (sibDom=oldDom, j=0; (sibDom=sibDom.nextSibling) && j<oldChildrenLength; j+=2) {\n\t\t\t\t\t\t\tif (sibDom==newDom) {\n\t\t\t\t\t\t\t\tbreak outer;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Browsers will infer an option's `value` from `textContent` when\n\t\t\t\t\t// no value is present. This essentially bypasses our code to set it\n\t\t\t\t\t// later in `diff()`. It works fine in all browsers except for IE11\n\t\t\t\t\t// where it breaks setting `select.value`. There it will be always set\n\t\t\t\t\t// to an empty string. Re-applying an options value will fix that, so\n\t\t\t\t\t// there are probably some internal data structures that aren't\n\t\t\t\t\t// updated properly.\n\t\t\t\t\t//\n\t\t\t\t\t// To fix it we make sure to reset the inferred value, so that our own\n\t\t\t\t\t// value check in `diff()` won't be skipped.\n\t\t\t\t\tif (newParentVNode.type == 'option') {\n\t\t\t\t\t\tparentDom.value = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toldDom = newDom.nextSibling;\n\n\t\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t\t// At this point, if childVNode._lastDomChild existed, then\n\t\t\t\t\t// newDom = childVNode._lastDomChild per line 101. Else it is\n\t\t\t\t\t// the same as childVNode._dom, meaning this component returned\n\t\t\t\t\t// only a single DOM node\n\t\t\t\t\tnewParentVNode._lastDomChild = newDom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ti++;\n\t\treturn childVNode;\n\t});\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove children that are not part of any vnode.\n\tif (excessDomChildren!=null && typeof newParentVNode.type !== 'function') for (i=excessDomChildren.length; i--; ) if (excessDomChildren[i]!=null) removeNode(excessDomChildren[i]);\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i=oldChildrenLength; i--; ) if (oldChildren[i]!=null) unmount(oldChildren[i], oldChildren[i]);\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @param {(vnode: import('../internal').VNode) => import('../internal').VNode} [callback]\n * A function to invoke for each child before it is added to the flattened list.\n * @param {Array<import('../internal').VNode | string | number>} [flattened] An flat array of children to modify\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, callback, flattened) {\n\tif (flattened == null) flattened = [];\n\n\tif (children==null || typeof children === 'boolean') {\n\t\tif (callback) flattened.push(callback(null));\n\t}\n\telse if (Array.isArray(children)) {\n\t\tfor (let i=0; i < children.length; i++) {\n\t\t\ttoChildArray(children[i], callback, flattened);\n\t\t}\n\t}\n\telse if (!callback) {\n\t\tflattened.push(children);\n\t}\n\telse if (typeof children === 'string' || typeof children === 'number') {\n\t\tflattened.push(callback(createVNode(null, children, null, null)));\n\t}\n\telse if (children._dom != null || children._component != null) {\n\t\tflattened.push(callback(createVNode(children.type, children.props, children.key, null)));\n\t}\n\telse {\n\t\tflattened.push(callback(children));\n\t}\n\n\treturn flattened;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (!(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif ((!hydrate || typeof newProps[i]=='function') && i!=='value' && i!=='checked' && oldProps[i]!==newProps[i]) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t}\n\telse {\n\t\tstyle[key] = typeof value==='number' && IS_NON_DIMENSIONAL.test(key)===false ? value+'px' : value==null ? '' : value;\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nfunction setProperty(dom, name, value, oldValue, isSvg) {\n\tname = isSvg ? (name==='className' ? 'class' : name) : (name==='class' ? 'className' : name);\n\n\tif (name==='key' || name === 'children') {}\n\telse if (name==='style') {\n\t\tconst s = dom.style;\n\n\t\tif (typeof value==='string') {\n\t\t\ts.cssText = value;\n\t\t}\n\t\telse {\n\t\t\tif (typeof oldValue==='string') {\n\t\t\t\ts.cssText = '';\n\t\t\t\toldValue = null;\n\t\t\t}\n\n\t\t\tif (oldValue) for (let i in oldValue) {\n\t\t\t\tif (!(value && i in value)) {\n\t\t\t\t\tsetStyle(s, i, '');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) for (let i in value) {\n\t\t\t\tif (!oldValue || value[i] !== oldValue[i]) {\n\t\t\t\t\tsetStyle(s, i, value[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0]==='o' && name[1]==='n') {\n\t\tlet useCapture = name !== (name=name.replace(/Capture$/, ''));\n\t\tlet nameLower = name.toLowerCase();\n\t\tname = (nameLower in dom ? nameLower : name).slice(2);\n\n\t\tif (value) {\n\t\t\tif (!oldValue) dom.addEventListener(name, eventProxy, useCapture);\n\t\t\t(dom._listeners || (dom._listeners = {}))[name] = value;\n\t\t}\n\t\telse {\n\t\t\tdom.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t}\n\telse if (\n\t\tname!=='list'\n\t\t&& name!=='tagName'\n\t\t// HTMLButtonElement.form and HTMLInputElement.form are read-only but can be set using\n\t\t// setAttribute\n\t\t&& name!=='form'\n\t\t&& !isSvg\n\t\t&& (name in dom)\n\t) {\n\t\tdom[name] = value==null ? '' : value;\n\t}\n\telse if (typeof value!=='function' && name!=='dangerouslySetInnerHTML') {\n\t\tif (name!==(name = name.replace(/^xlink:?/, ''))) {\n\t\t\tif (value==null || value===false) {\n\t\t\t\tdom.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);\n\t\t\t}\n\t\t}\n\t\telse if (value==null || value===false) {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t\telse {\n\t\t\tdom.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { Component, enqueueRender } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren, toChildArray } from './children';\nimport { diffProps } from './props';\nimport { assign, removeNode } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {Element | Text} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(parentDom, newVNode, oldVNode, context, isSvg, excessDomChildren, commitQueue, oldDom, isHydrating) {\n\tlet tmp, newType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\tif (tmp = options._diff) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType==='function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && context[tmp._id];\n\t\t\tlet cctx = tmp ? (provider ? provider.props.value : tmp._defaultValue) : context;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, cctx); // eslint-disable-line new-cap\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, cctx);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = cctx;\n\t\t\t\tc._context = context;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState==null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps!=null) {\n\t\t\t\tassign(c._nextState==c.state ? (c._nextState = assign({}, c._nextState)) : c._nextState, newType.getDerivedStateFromProps(newProps, c._nextState));\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (newType.getDerivedStateFromProps==null && c.componentWillMount!=null) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount!=null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (newType.getDerivedStateFromProps==null && c._force==null && c.componentWillReceiveProps!=null) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, cctx);\n\t\t\t\t}\n\n\t\t\t\tif (!c._force && c.shouldComponentUpdate!=null && c.shouldComponentUpdate(newProps, c._nextState, cctx)===false) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tfor (tmp = 0; tmp < newVNode._children.length; tmp++) {\n\t\t\t\t\t\tif (newVNode._children[tmp]) newVNode._children[tmp]._parent = newVNode;\n\t\t\t\t\t}\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate!=null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, cctx);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate!=null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = cctx;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (tmp = options._render) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\t\t\tlet isTopLevelFragment = tmp != null && tmp.type == Fragment && tmp.key == null;\n\t\t\tnewVNode._children = toChildArray(isTopLevelFragment ? tmp.props.children : tmp);\n\n\t\t\tif (c.getChildContext!=null) {\n\t\t\t\tcontext = assign(assign({}, context), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate!=null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tdiffChildren(parentDom, newVNode, oldVNode, context, isSvg, excessDomChildren, commitQueue, oldDom, isHydrating);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = null;\n\t\t}\n\t\telse {\n\t\t\tnewVNode._dom = diffElementNodes(oldVNode._dom, newVNode, oldVNode, context, isSvg, excessDomChildren, commitQueue, isHydrating);\n\t\t}\n\n\t\tif (tmp = options.diffed) tmp(newVNode);\n\t}\n\tcatch (e) {\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n\n\treturn newVNode._dom;\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => { cb.call(c); });\n\t\t}\n\t\tcatch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(dom, newVNode, oldVNode, context, isSvg, excessDomChildren, commitQueue, isHydrating) {\n\tlet i;\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvg = newVNode.type==='svg' || isSvg;\n\n\tif (dom==null && excessDomChildren!=null) {\n\t\tfor (i=0; i<excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\tif (child!=null && (newVNode.type===null ? child.nodeType===3 : child.localName===newVNode.type)) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom==null) {\n\t\tif (newVNode.type===null) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\t\tdom = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', newVNode.type) : document.createElement(newVNode.type);\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t}\n\n\tif (newVNode.type===null) {\n\t\tif (excessDomChildren!=null) excessDomChildren[excessDomChildren.indexOf(dom)] = null;\n\t\tif (oldProps !== newProps) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t}\n\telse if (newVNode!==oldVNode) {\n\t\tif (excessDomChildren!=null) {\n\t\t\texcessDomChildren = EMPTY_ARR.slice.call(dom.childNodes);\n\t\t}\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\tif (oldProps === EMPTY_OBJ) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (let i=0; i<dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (!newHtml || !oldHtml || newHtml.__html!=oldHtml.__html) {\n\t\t\t\t\tdom.innerHTML = newHtml && newHtml.__html || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\tnewVNode._children = newVNode.props.children;\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (!newHtml) {\n\t\t\tdiffChildren(dom, newVNode, oldVNode, context, newVNode.type==='foreignObject' ? false : isSvg, excessDomChildren, commitQueue, EMPTY_OBJ, isHydrating);\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (('value' in newProps) && newProps.value!==undefined && newProps.value !== dom.value) dom.value = newProps.value==null ? '' : newProps.value;\n\t\t\tif (('checked' in newProps) && newProps.checked!==undefined && newProps.checked !== dom.checked) dom.checked = newProps.checked;\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref=='function') ref(value);\n\t\telse ref.current = value;\n\t}\n\tcatch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif (r = vnode.ref) {\n\t\tapplyRef(r, null, parentVNode);\n\t}\n\n\tlet dom;\n\tif (!skipRemove && typeof vnode.type !== 'function') {\n\t\tskipRemove = (dom = vnode._dom)!=null;\n\t}\n\n\tvnode._dom = vnode._lastDomChild = null;\n\n\tif ((r = vnode._component)!=null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif (r = vnode._children) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) unmount(r[i], parentVNode, skipRemove);\n\t\t}\n\t}\n\n\tif (dom!=null) removeNode(dom);\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n\n/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} oldVNode The oldVNode of the vnode\n * that threw, if this VNode threw while diffing\n */\n(options)._catchError = function (error, vnode, oldVNode) {\n\n\t/** @type {import('../internal').Component} */\n\tlet component;\n\n\tfor (; vnode = vnode._parent;) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tif (component.constructor && component.constructor.getDerivedStateFromError!=null) {\n\t\t\t\t\tcomponent.setState(component.constructor.getDerivedStateFromError(error));\n\t\t\t\t}\n\t\t\t\telse if (component.componentDidCatch!=null) {\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\treturn enqueueRender(component._pendingError = component);\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n};\n","import { assign } from './util';\nimport { EMPTY_ARR } from './constants';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./index').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n */\nexport function cloneElement(vnode, props) {\n\tprops = assign(assign({}, vnode.props), props);\n\tif (arguments.length>2) props.children = EMPTY_ARR.slice.call(arguments, 2);\n\treturn createVNode(vnode.type, props, props.key || vnode.key, props.ref || vnode.ref);\n}\n"],"names":["const","options","isValidElement","q","defer","prevDebounce","IS_HYDRATE","i","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","assign","obj","props","let","removeNode","node","parentNode","removeChild","createElement","type","children","ref","key","arguments","length","push","defaultProps","undefined","createVNode","vnode","_children","_parent","_depth","_dom","_lastDomChild","_component","constructor","createRef","Fragment","Component","context","getDomSibling","childIndex","indexOf","sibling","updateParentDomPointers","child","base","enqueueRender","c","_dirty","debounceRendering","process","p","component","commitQueue","newDom","oldDom","parentDom","sort","a","b","_vnode","pop","_parentDom","diff","_context","ownerSVGElement","commitRoot","diffChildren","newParentVNode","oldParentVNode","isSvg","excessDomChildren","isHydrating","j","oldVNode","sibDom","firstChildDom","refs","oldChildren","oldChildrenLength","toChildArray","childVNode","outer","appendChild","nextSibling","insertBefore","value","unmount","applyRef","callback","flattened","Array","isArray","diffProps","dom","newProps","oldProps","hydrate","setProperty","setStyle","style","test","name","oldValue","s","useCapture","nameLower","cssText","replace","toLowerCase","slice","addEventListener","eventProxy","_listeners","removeEventListener","removeAttributeNS","setAttributeNS","removeAttribute","setAttribute","e","event","newVNode","tmp","isNew","oldState","snapshot","clearProcessingException","provider","cctx","newType","_diff","contextType","_id","_defaultValue","_processingException","_pendingError","prototype","render","doRender","sub","state","_renderCallbacks","_nextState","getDerivedStateFromProps","componentWillMount","componentDidMount","_force","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","_render","getChildContext","getSnapshotBeforeUpdate","diffElementNodes","diffed","_catchError","root","_commit","some","cb","call","oldHtml","newHtml","nodeType","localName","document","createTextNode","createElementNS","data","childNodes","dangerouslySetInnerHTML","attributes","__html","innerHTML","checked","current","parentVNode","skipRemove","r","componentWillUnmount","this","replaceNode","_root","cloneElement","createContext","defaultValue","ctx","Consumer","Provider","subs","_props","old","splice","setState","update","forceUpdate","Promise","then","bind","resolve","setTimeout","error","getDerivedStateFromError","componentDidCatch"],"mappings":"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"}